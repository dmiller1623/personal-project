// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SearchPage should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchPage
    store={Object {}}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <header
          className="header"
/>,
        <div>
          <input
                    className="search"
                    name="search"
                    onChange={[Function]}
                    placeholder="search for resources"
                    type="text"
          />
          <button
                    onClick={[Function]}
          >
                    Search
          </button>
          <NavLink
                    activeClassName="active"
                    aria-current="page"
                    to="/selectedResources"
          >
                    View Selected Resources
          </NavLink>
</div>,
        <div
          className="searched-cards"
>
          <RelatedItemsContainer
                    addResources={[Function]}
                    relatedSearches={undefined}
          />
</div>,
      ],
      "className": "search-page",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "header",
        },
        "ref": null,
        "rendered": null,
        "type": "header",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <input
              className="search"
              name="search"
              onChange={[Function]}
              placeholder="search for resources"
              type="text"
/>,
            <button
              onClick={[Function]}
>
              Search
</button>,
            <NavLink
              activeClassName="active"
              aria-current="page"
              to="/selectedResources"
>
              View Selected Resources
</NavLink>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "search",
              "name": "search",
              "onChange": [Function],
              "placeholder": "search for resources",
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Search",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Search",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "activeClassName": "active",
              "aria-current": "page",
              "children": "View Selected Resources",
              "to": "/selectedResources",
            },
            "ref": null,
            "rendered": "View Selected Resources",
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <RelatedItemsContainer
            addResources={[Function]}
            relatedSearches={undefined}
/>,
          "className": "searched-cards",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "addResources": [Function],
            "relatedSearches": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <header
            className="header"
/>,
          <div>
            <input
                        className="search"
                        name="search"
                        onChange={[Function]}
                        placeholder="search for resources"
                        type="text"
            />
            <button
                        onClick={[Function]}
            >
                        Search
            </button>
            <NavLink
                        activeClassName="active"
                        aria-current="page"
                        to="/selectedResources"
            >
                        View Selected Resources
            </NavLink>
</div>,
          <div
            className="searched-cards"
>
            <RelatedItemsContainer
                        addResources={[Function]}
                        relatedSearches={undefined}
            />
</div>,
        ],
        "className": "search-page",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "header",
          },
          "ref": null,
          "rendered": null,
          "type": "header",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <input
                className="search"
                name="search"
                onChange={[Function]}
                placeholder="search for resources"
                type="text"
/>,
              <button
                onClick={[Function]}
>
                Search
</button>,
              <NavLink
                activeClassName="active"
                aria-current="page"
                to="/selectedResources"
>
                View Selected Resources
</NavLink>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "search",
                "name": "search",
                "onChange": [Function],
                "placeholder": "search for resources",
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Search",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Search",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "activeClassName": "active",
                "aria-current": "page",
                "children": "View Selected Resources",
                "to": "/selectedResources",
              },
              "ref": null,
              "rendered": "View Selected Resources",
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <RelatedItemsContainer
              addResources={[Function]}
              relatedSearches={undefined}
/>,
            "className": "searched-cards",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "addResources": [Function],
              "relatedSearches": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
